# kstat -p e1000g:*:mac:*errors
# kstat -p e1000g:*:statistics:*[Ee]rror*
# kstat -p link:*:e1000g*:*err*

# kstat -p e1000g:*:statistics:*[Ee]rror*

# kstat -p aggr:*:statistics:*[Ee]rror*

# kstat -p link:*:aggr*:*err* <- if aggregates exist


kstat -p *:*:statistics:*[Ee]rror*
kstat -p link:*:*:*[Ee]rr*

sderr:9:sd9,err:Hard Errors

stmf:0:itl_0.1.11:lu-guid

printf "%s %5s %s\n" "Current ARC Size:" "$(( $(kstat -p zfs:*:arc*:size|awk '{print $2}') /1024/1024 ))" "MB" >> /some/file/path

### Check C-states on system
# kstat -p cpu_info:::current_cstate | awk '$2 ~ /^[2-9]$/'
# kstat -p cpu_info:::supported_max_cstates | awk '$2 ~ /^[3-9]$/'

### Arcstats one-liners
# printf "%s %s\n" "ARC Target:" "$(( $(kstat -p ::arcstats|head -1|cut -f2) / 1048576 ))MB"

## Errors on all disks
# for a in H S T; do kstat -p sderr:*:sd*,err:$a*Err*; done

## Calculate percentage of hits vs. misses against demand data from ARC
python -c "print '%1.2f' % (100 - (float($(kstat -p zfs:0:arcstats:demand_data_misses|cut -f2)) / float($(kstat -p zfs:0:arcstats:demand_data_hits|cut -f2)) * 100))"


kstat -p ::vopstats_zfs:{nread,read_bytes,nwrite,write_bytes}

kstat -p unix:0:vopstats_zfs:nread
kstat -p unix:0:vopstats_zfs:read_bytes

## Read to write ratio as percentage of total bytes at ZFS layer
python -c "print '%1.2f' % (100 - float( $(kstat -p unix:0:vopstats_zfs:write_bytes|cut -f2) ) / (float( $(kstat -p unix:0:vopstats_zfs:read_bytes|cut -f2) + $(kstat -p unix:0:vopstats_zfs:write_bytes|cut -f2) )) *100)"

## Write to read ratio as percentage of total bytes at ZFS layer
python -c "print '%1.2f' % (100 - float( $(kstat -p unix:0:vopstats_zfs:read_bytes|cut -f2) ) / (float( $(kstat -p unix:0:vopstats_zfs:read_bytes|cut -f2) + $(kstat -p unix:0:vopstats_zfs:write_bytes|cut -f2) )) *100)"

{nread,read_bytes,nwrite,write_bytes}

## Average bytes per read IO
python -c "print '%1.2f' % (float($(kstat -p ::vopstats_zfs:read_bytes|cut -f2)) / float($(kstat -p ::vopstats_zfs:nread|cut -f2)) )"

## Average bytes written per IO
python -c "print '%1.2f' % (float($(kstat -p ::vopstats_zfs:write_bytes|cut -f2)) / float($(kstat -p ::vopstats_zfs:nwrite|cut -f2)))"

## Memory page information
kstat -p unix:0:system_pages:\
{pagesfree,pagestotal,physmem}

## CPU sys.usr.idle information
kstat -p cpu:0:sys:cpu_ticks_{kernel,user,idle}

