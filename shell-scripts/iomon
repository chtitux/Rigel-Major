#!/usr/bin/bash
#
# Copyright (c) 2012, RackTop Systems. All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:

# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer. 
# 2. Redistributions in binary form must reproduce the above copyright notice, 
# this list of conditions and the following disclaimer in the documentation 
# and/or other materials provided with the distribution.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# The views and conclusions contained in the software and documentation are
# those of the authors and should not be interpreted as representing official
# policies,  either expressed or implied, of the FreeBSD Project.

grep_cmd=/usr/bin/grep
iostat_cmd=/usr/bin/iostat
sleep_cmd=/usr/bin/sleep
log=/tmp/iostat-$(hostname)-$(date +%Y%m%d).log
home_dir=$(/usr/bin/gawk 'BEGIN {FS=":"} {print $6}' /etc/passwd|${grep_cmd} $(whoami))
flag="${home_dir}/stop.iomon"
pause="$1"
count="$2"

## We will divide frequency by total seconds in 24hrs to get
## number of times to repeat in order to run 24 hrs, overwrite
## this behavior with second command line argument, which will replace
## calculation based on 24hr clock
seconds=86400

cleanup () {
    rm -f ${flag}
    return 0
}

if [[ -f ${flag} ]]; then
    printf "%s\n" "Removing old flag that was seemingly left over."
    cleanup
fi

## Trapping signals and cleaning up
pid=
trap 'printf "%s\n" "Signal trapped. Do cleanup."; [[ $pid ]] && kill $pid' 1 2 3 15

if [[ -z ${pause} ]]; then
    printf "[INFO] %s\n[INFO] %s\n" "There was no value supplied for pause." "Example: run $0 30 to pause for 30 seconds at each iteration."
    exit 1
fi

if [[ -z ${count} ]]; then
    count=$(( ${seconds} / ${pause} ))
fi

function runme() {
    printf "[SETTINGS] Pause: %s sec. Repeat: %s time(s)\n" "${pause}" "${count}"
    run="${iostat_cmd} -DenrxzTd ${pause} ${count}"
    ${run}
    touch ${flag}
    return 0
}


while [[ ! -f ${flag} ]]; do 
    runme >> ${log}
    done

## Exit the script
cleanup
